
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kitdigital-prod
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kitdigital-prod
  template:
    metadata:
      labels:
        app: kitdigital-prod
    spec:
      containers:
      - name: kitdigital-prod
        image: butlerhat/kitdigital-prod
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: "4"
            memory: "6Gi"
          requests:
            memory: "500Mi"
            cpu: "0.2"
        volumeMounts:
        - name: kitdigital-storage
          mountPath: /workspaces/ai-butlerhat/data-butlerhat/robotframework-butlerhat/TestSuites/KitDigital/result_kit
      volumes:
      - name: kitdigital-storage
        persistentVolumeClaim:
          claimName: kitdigital-pvc

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: kitdigital-pv
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/home/david/data/KitDigital"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kitdigital-pvc
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi


---
apiVersion: v1
kind: Service
metadata:
  name: kitdigital-prod-service
  namespace: default
spec:
  selector:
    app: kitdigital-prod
  ports:
  - name: streamlit
    protocol: TCP
    port: 8501
    targetPort: 8501


# Connect with cloudflare
---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cloudflared
  name: cloudflared-deployment-kitdigital-prod
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      pod: cloudflared
  template:
    metadata:
      labels:
        pod: cloudflared
    spec:
      containers:
      - command:
        - cloudflared
        - tunnel
        - --metrics
        - 0.0.0.0:2000
        - run
        args:
        - --token
        - $(TUNNEL-TOKEN)
        image: cloudflare/cloudflared:latest
        name: cloudflared-kitdigital-prod
        env:
        - name: TUNNEL-TOKEN
          valueFrom:
            secretKeyRef:
              name: cloudflared-token-kitdigital-prod
              key: token
        resources:
          limits:
            memory: "1Gi"
            cpu: "1"
          requests:
            memory: "500Mi"
            cpu: "0.2"
        livenessProbe:
          httpGet:
          # Cloudflared has a /ready endpoint which returns 200 if and only if
          # it has an active connection to the edge.
            path: /ready
            port: 2000
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10